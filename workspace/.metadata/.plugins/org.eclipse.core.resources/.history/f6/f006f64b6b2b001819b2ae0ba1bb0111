package cn.itcast_03;

import java.lang.reflect.Constructor;
import java.lang.reflect.Field;

/** 
* @author 作者 E-mail: 
* @version 创建时间：2018年3月19日 下午7:22:16 
* 类说明 
* 通过反射获取成员变量并使用
* 
*/
public class ReflectDemo {
	public static void main(String[] args) throws Exception{
		//获取字节码文件对象
		Class c = Class.forName("cn.itcast_01.Person");
		
		//获取所有的成员变量
		//Field[] fields = c.getFields();//获取公共的成员变量
		Field[] fields = c.getDeclaredFields();
		for(Field field:fields){
			System.out.println(field);
		}
		
		/*
		 *Person p = new Person
		 *p.address = "北京"
		 *System.out.println(p); //北京
		 * 
		 * */
		
		//通过无参构造方法，创建对象
		Constructor con = c.getConstructor();
		Object obj = con.newInstance();
		System.out.println(obj);
		
		
		//获取单个的成员变量
		//获取address并对其赋值
		Field addressField = c.getField("address");
		//public void set(Object obj,object value
		addressField.set(obj, "北京");
		//给obj对象的addressField字段设置为“北京”
		
		System.out.println(obj);
		
		//获取name并对其赋值
		Field nameField = c.getDeclaredField("name");
		//IllegalAccessException  非法访问异常。
		nameField.setAccessible(true);//取消访问检查
		nameField.set(obj, "林青霞");
		//NoSuchFieldException  么有这个变量异常，因为name不是公共的
		System.out.println(obj);
		
		//获取age 并对其赋值
		Field ageField = c.getDeclaredField("age");
		
		ageField.set(obj, 27);
		System.out.println(obj);
		
	}

}
