interface Collection{}
interface Set extends Collection{}
class HashSet IMplements Set{
	private static final Object PRESENT = new Object()
	private transient HashMap<E,Object> map;
	
	public HashSet(){
		map = new HashMap<>();
	}
	
	public boolean add(E e){
		return map.put(e,PRESENT)==null;
	
	}

}

class HasnMap implements Map{

}

class HashSet implements Map{
	public V put (K key ,V value){
		inflateTable(threshold);
	
	
	}
	if(key==null){
		return putForNullKey(value);
	int hash = hash(key);
	int i = indexFor(hash, table.length);
	for(Entry<K,V> e = table[i]; e! = null; e=e.next){
		Object k;
		if(e.hash==hash && ((k = e.key) == key || key.equals(k))){
			V oldValue = e.value;
			e.value = value;
			e.recordAcess(this);
			return oldValue;
			}
		}
			modCount++;
	    addEntry(hash,key,value,i);
	    return null;
	}

}


